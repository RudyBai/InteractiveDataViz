{
    "version": 3,
    "sources": [
        "Components/WordCloud/WordCloud.module.css",
        "App.module.css",
        "Components/WordCloud/WordCloud.tsx",
        "Components/WordCloud/WordCloudUtils.tsx",
        "App.tsx",
        "reportWebVitals.ts",
        "index.tsx"
    ],
    "names": [
        "module",
        "exports",
        "marks",
        "value",
        "label",
        "WordCloud",
        "useState",
        "year",
        "setYear",
        "text",
        "count",
        "word",
        "setWord",
        "useEffect",
        "i",
        "fetch",
        "headers",
        "then",
        "response",
        "json",
        "metrics",
        "data",
        "targetDiv",
        "id",
        "width",
        "window",
        "innerWidth",
        "height",
        "innerHeight",
        "fill",
        "d3",
        "xScale",
        "domain",
        "d",
        "range",
        "cloud",
        "size",
        "timeInterval",
        "words",
        "fontSize",
        "rotate",
        "Math",
        "random",
        "font",
        "on",
        "append",
        "attr",
        "style",
        "selectAll",
        "enter",
        "this",
        "attributes",
        "parseFloat",
        "replace",
        "raise",
        "lower",
        "x",
        "y",
        "process",
        "loading",
        "document",
        "getElementById",
        "display",
        "start",
        "stop",
        "drawWordCloud",
        "minRange",
        "maxRange",
        "length",
        "push",
        "r1",
        "r2",
        "maxValue",
        "max",
        "minValue",
        "min",
        "scaleWords",
        "svg",
        "className",
        "classes",
        "Cloud",
        "Wrapper",
        "Slider",
        "defaultValue",
        "getAriaValueText",
        "aria-labelledby",
        "step",
        "valueLabelDisplay",
        "onChangeCommitted",
        "event",
        "newValue",
        "console",
        "log",
        "Details",
        "toFixed",
        "App",
        "path",
        "reportWebVitals",
        "onPerfEntry",
        "Function",
        "getCLS",
        "getFID",
        "getFCP",
        "getLCP",
        "getTTFB",
        "ReactDOM",
        "render",
        "StrictMode"
    ],
    "mappings": "gGACAA,EAAOC,QAAU,CAAC,OAAS,0BAA0B,QAAU,2BAA2B,QAAU,2BAA2B,MAAQ,2B,mBCAvID,EAAOC,QAAU,CAAC,IAAM,iBAAiB,IAAM,mB,8MCiBzCC,EAAQ,CACV,CACIC,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,IACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,SAIA,SAASC,IAAa,IAAD,EAERC,mBAAiB,MAFT,mBAEzBC,EAFyB,KAEnBC,EAFmB,OAGRF,mBAAoB,CACxCG,KAAM,GACNN,MAAO,E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",
    "file": "static/js/main.297f9b80.chunk.js",
    "sourcesContent": [
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"Slider\":\"WordCloud_Slider__22vL9\",\"Details\":\"WordCloud_Details__1VrbX\",\"Wrapper\":\"WordCloud_Wrapper__1PuRq\",\"Cloud\":\"WordCloud_Cloud__vZkEX\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__10j_3\",\"Nav\":\"App_Nav__cHAZj\"};",
        "import React, {useEffect, useState} from \"react\";\r\nimport {scaleWords} from \"./WordCloudUtils\";\r\nimport * as d3 from 'd3';\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport cloud from \"d3-cloud\";\r\nimport classes from \"./WordCloud.module.css\";\r\n\r\nexport interface Word {\r\n    text: string,\r\n    value: number\r\n}\r\n\r\nexport interface WordCount {\r\n    text: string,\r\n    value: number,\r\n    count: string\r\n}\r\n\r\nconst marks = [\r\n    {\r\n        value: 1980,\r\n        label: '1980',\r\n    },\r\n    {\r\n        value: 1983,\r\n        label: '1983',\r\n    },\r\n    {\r\n        value: 1985,\r\n        label: '1985',\r\n    },\r\n    {\r\n        value: 1986,\r\n        label: '1986',\r\n    },\r\n    {\r\n        value: 1987,\r\n        label: '1987',\r\n    },\r\n    {\r\n        value: 1988,\r\n        label: '1988',\r\n    },\r\n    {\r\n        value: 1989,\r\n        label: '1989',\r\n    },\r\n    {\r\n        value: 1990,\r\n        label: '1990',\r\n    },\r\n    {\r\n        value: 1991,\r\n        label: '1991',\r\n    },\r\n    {\r\n        value: 1992,\r\n        label: '1992',\r\n    },\r\n    {\r\n        value: 1993,\r\n        label: '1993',\r\n    },\r\n    {\r\n        value: 1994,\r\n        label: '1994',\r\n    },\r\n    {\r\n        value: 1995,\r\n        label: '1995',\r\n    },\r\n    {\r\n        value: 1996,\r\n        label: '1996',\r\n    },\r\n    {\r\n        value: 1997,\r\n        label: '1997',\r\n    },\r\n    {\r\n        value: 1998,\r\n        label: '1998',\r\n    },\r\n    {\r\n        value: 1999,\r\n        label: '1999',\r\n    },\r\n    {\r\n        value: 2000,\r\n        label: '2000',\r\n    },\r\n    {\r\n        value: 2001,\r\n        label: '2001',\r\n    },\r\n    {\r\n        value: 2002,\r\n        label: '2002',\r\n    },\r\n    {\r\n        value: 2003,\r\n        label: '2003',\r\n    },\r\n    {\r\n        value: 2004,\r\n        label: '2004',\r\n    },\r\n    {\r\n        value: 2005,\r\n        label: '2005',\r\n    },\r\n    {\r\n        value: 2006,\r\n        label: '2006',\r\n    },\r\n    {\r\n        value: 2007,\r\n        label: '2007',\r\n    },\r\n    {\r\n        value: 2008,\r\n        label: '2008',\r\n    },\r\n    {\r\n        value: 2009,\r\n        label: '2009',\r\n    },\r\n    {\r\n        value: 2010,\r\n        label: '2010',\r\n    },\r\n    {\r\n        value: 2011,\r\n        label: '2011',\r\n    },\r\n    {\r\n        value: 2012,\r\n        label: '2012',\r\n    },\r\n    {\r\n        value: 2013,\r\n        label: '2013',\r\n    },\r\n    {\r\n        value: 2014,\r\n        label: '2014',\r\n    },\r\n    {\r\n        value: 2015,\r\n        label: '2015',\r\n    },\r\n    {\r\n        value: 2016,\r\n        label: '2016',\r\n    },\r\n    {\r\n        value: 2017,\r\n        label: '2017',\r\n    },\r\n    {\r\n        value: 2018,\r\n        label: '2018',\r\n    }\r\n];\r\n\r\nexport default function WordCloud() {\r\n\r\n    const [year, setYear] = useState<number>(1980);\r\n    const [word, setWord] = useState<WordCount>({\r\n        text: \"\",\r\n        value: 0,\r\n        count: \"0 / 0\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (process.env.NODE_ENV === \"development\") console.log(\"Fetching data.\");\r\n        for (let i = 0; i < marks.length; i++) {\r\n            fetch(\"data/\" + marks[i].value + \"_metric.json\", {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            }).then((response) => {\r\n                return response.json();\r\n            }).then((metrics) => {\r\n\r\n                const drawWordCloud = (data: WordCount[], targetDiv: string, id: string) => {\r\n                    const width = window.innerWidth - 20;\r\n                    const height = window.innerHeight - 56;\r\n\r\n                    const fill = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n                    const xScale = d3.scaleLinear().domain([0, d3.max(data, function (d: any) {\r\n                        return d.value;\r\n                    })]).range([10, 150]);\r\n\r\n                    cloud()\r\n                        .size([width, height])\r\n                        .timeInterval(20)\r\n                        .words(data)\r\n                        .fontSize((d: any) => xScale(+d.value))\r\n                        .text((d: any) => d.text)\r\n                        .rotate(() => -45 + ~~(+Math.random() * 2) * 90)\r\n                        .font(\"Impact\")\r\n                        .on(\"end\", draw)\r\n                        .start();\r\n\r\n                    function draw(words: any) {\r\n                        d3\r\n                            .select(targetDiv)\r\n                            .append(\"svg\")\r\n                            .attr(\"id\", id)\r\n                            .style(\"display\", id === \"\" + year ? \"block\" : \"none\")\r\n                            .attr(\"width\", width)\r\n                            .attr(\"height\", height)\r\n                            .append(\"g\")\r\n                            .attr(\"transform\", \"translate(\" + [width >> 1, height >> 1] + \")\")\r\n                            .selectAll(\"text\")\r\n                            .data(words)\r\n                            .enter()\r\n                            .append(\"text\")\r\n                            .attr(\"font-size\", (d: any) => xScale(d.value) + \"px\")\r\n                            .style(\"font-family\", \"Impact\")\r\n\r\n                            .on(\"mouseover\", function (d) {\r\n                                setWord({\r\n                                    text: d.text,\r\n                                    value: d.value,\r\n                                    count: d.count\r\n                                } as WordCount);\r\n                                // @ts-ignore\r\n                                this.attributes[\"font-size\"].value = parseFloat(this.attributes[\"font-size\"].value.replace(\"px\", \"\")) * 1.6 + \"px\";\r\n                                d3.select(this).raise();\r\n                            })\r\n\r\n                            .on(\"mouseout\", function () {\r\n                                // @ts-ignore\r\n                                this.attributes[\"font-size\"].value = parseFloat(this.attributes[\"font-size\"].value.replace(\"px\", \"\")) * 0.625 + \"px\";\r\n                                d3.select(this).lower();\r\n                            })\r\n\r\n                            .attr(\"fill\", (d: any, i: any) => fill(i))\r\n                            .attr(\"text-anchor\", \"middle\")\r\n                            .attr(\"transform\", (d: any) => \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\")\r\n\r\n                            .text((d: any) => {\r\n                                return d.text;\r\n                            });\r\n\r\n                        if (process.env.NODE_ENV === \"development\") console.log(id + \" loaded.\");\r\n                        if (year + \"\" === id) {\r\n                            const loading = document.getElementById(\"loading\");\r\n                            if (loading) loading.style.display = \"none\";\r\n                        }\r\n                    }\r\n\r\n                    cloud().stop();\r\n                }\r\n\r\n                drawWordCloud(scaleWords(metrics, 10, 200), \"#chart\", \"\" + marks[i].value);\r\n\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const svg = document.getElementById(\"\" + year);\r\n        if (svg !== null) {\r\n            svg.style.display = \"block\";\r\n            if (process.env.NODE_ENV === \"development\") console.log(year + \": \" + svg.style.display);\r\n        }\r\n    }, [year]);\r\n\r\n\r\n    const handleYearChange = (event: any, newValue: number | number[]) => {\r\n        if (newValue as number !== year) {\r\n            const svg = document.getElementById(\"\" + year);\r\n            if (svg !== null) {\r\n                svg.style.display = \"none\";\r\n                console.log(year + \": \" + svg.style.display);\r\n            }\r\n            setYear(newValue as number);\r\n        }\r\n    };\r\n\r\n    return <div>\r\n        <div id={\"chart\"} className={classes.Cloud}>\r\n            <p id={\"loading\"}>Loading...</p>\r\n        </div>\r\n        <div className={classes.Wrapper}>\r\n            <div id={\"slider\"} className={classes.Slider}>\r\n                <Slider\r\n                    defaultValue={1980}\r\n                    getAriaValueText={(value) => {\r\n                        return `${value}`;\r\n                    }}\r\n                    aria-labelledby=\"discrete-slider-custom\"\r\n                    step={null}\r\n                    valueLabelDisplay=\"auto\"\r\n                    marks={marks}\r\n                    min={1980}\r\n                    max={2018}\r\n                    onChangeCommitted={handleYearChange}\r\n                />\r\n            </div>\r\n            <div className={classes.Details}>\r\n                <p>Word: {word.text}</p>\r\n                <p>Value: {(word.value as number).toFixed(2)}</p>\r\n                <p>Count: {word.count}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n",
        "import {WordCount} from \"./WordCloud\";\r\n\r\nexport function scaleWords(words: WordCount[], minRange: number, maxRange: number) {\r\n\r\n    const x: any[] = [];\r\n\r\n    for (let i = 0; i < words.length; i++) {\r\n        x.push(words[i].value);\r\n    }\r\n\r\n    const maxValue = (Math.max(...x));\r\n    const minValue = (Math.min(...x));\r\n\r\n    function convertRange(value: number, r1: any, r2: any) {\r\n        return (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\r\n    }\r\n\r\n    for (let i = 0; i < words.length; i++) {\r\n        words[i].value = convertRange(words[i].value, [minValue, maxValue], [minRange, maxRange]);\r\n    }\r\n    return words;\r\n}\r\n",
        "import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport classes from './App.module.css';\r\nimport WordCloud from \"./Components/WordCloud/WordCloud\";\r\n\r\nexport default function App() {\r\n    return <div className={classes.App}>\r\n        <Router>\r\n            {/*<nav className={classes.Nav}>*/}\r\n            {/*    <Link to=\"/\">Home</Link>*/}\r\n            {/*    <Link to=\"/wordcloud\">Wordcloud</Link>*/}\r\n            {/*<Link to=\"/word-guesser\">Word Guesser</Link>*/}\r\n            {/*<Link to=\"/calc\">Calculator</Link>*/}\r\n            {/*</nav>*/}\r\n            <Switch>\r\n                {/*<Route path={\"/word-guesser\"}>*/}\r\n                {/*    <WordGuesser/>*/}\r\n                {/*</Route>*/}\r\n                {/*<Route path={\"/wordcloud\"}>*/}\r\n                <Route path={\"/\"}>\r\n                    <WordCloud/>\r\n                    {/*</Route>*/}\r\n                    {/*<Route path={\"/calc\"}>*/}\r\n                    {/*    <Calculator/>*/}\r\n                    {/*</Route>*/}\r\n                    {/*<Route path={\"/\"}>*/}\r\n                    {/*    <Wall/>*/}\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    </div>;\r\n}\r\n",
        "import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",
        "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"
    ],
    "sourceRoot": ""
}
